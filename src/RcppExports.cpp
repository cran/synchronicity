// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// CreateBoostMutexInfo
SEXP CreateBoostMutexInfo(SEXP resourceName, SEXP timeout);
RcppExport SEXP synchronicity_CreateBoostMutexInfo(SEXP resourceNameSEXP, SEXP timeoutSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type resourceName(resourceNameSEXP);
    Rcpp::traits::input_parameter< SEXP >::type timeout(timeoutSEXP);
    __result = Rcpp::wrap(CreateBoostMutexInfo(resourceName, timeout));
    return __result;
END_RCPP
}
// GetResourceName
SEXP GetResourceName(SEXP mutexInfoAddr);
RcppExport SEXP synchronicity_GetResourceName(SEXP mutexInfoAddrSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type mutexInfoAddr(mutexInfoAddrSEXP);
    __result = Rcpp::wrap(GetResourceName(mutexInfoAddr));
    return __result;
END_RCPP
}
// GetTimeout
SEXP GetTimeout(SEXP mutexInfoAddr);
RcppExport SEXP synchronicity_GetTimeout(SEXP mutexInfoAddrSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type mutexInfoAddr(mutexInfoAddrSEXP);
    __result = Rcpp::wrap(GetTimeout(mutexInfoAddr));
    return __result;
END_RCPP
}
// IsRead
SEXP IsRead(SEXP mutexInfoAddr);
RcppExport SEXP synchronicity_IsRead(SEXP mutexInfoAddrSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type mutexInfoAddr(mutexInfoAddrSEXP);
    __result = Rcpp::wrap(IsRead(mutexInfoAddr));
    return __result;
END_RCPP
}
// boost_lock
SEXP boost_lock(SEXP mutexInfoAddr);
RcppExport SEXP synchronicity_boost_lock(SEXP mutexInfoAddrSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type mutexInfoAddr(mutexInfoAddrSEXP);
    __result = Rcpp::wrap(boost_lock(mutexInfoAddr));
    return __result;
END_RCPP
}
// boost_try_lock
SEXP boost_try_lock(SEXP mutexInfoAddr);
RcppExport SEXP synchronicity_boost_try_lock(SEXP mutexInfoAddrSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type mutexInfoAddr(mutexInfoAddrSEXP);
    __result = Rcpp::wrap(boost_try_lock(mutexInfoAddr));
    return __result;
END_RCPP
}
// boost_unlock
SEXP boost_unlock(SEXP mutexInfoAddr);
RcppExport SEXP synchronicity_boost_unlock(SEXP mutexInfoAddrSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type mutexInfoAddr(mutexInfoAddrSEXP);
    __result = Rcpp::wrap(boost_unlock(mutexInfoAddr));
    return __result;
END_RCPP
}
// boost_lock_shared
SEXP boost_lock_shared(SEXP mutexInfoAddr);
RcppExport SEXP synchronicity_boost_lock_shared(SEXP mutexInfoAddrSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type mutexInfoAddr(mutexInfoAddrSEXP);
    __result = Rcpp::wrap(boost_lock_shared(mutexInfoAddr));
    return __result;
END_RCPP
}
// boost_try_lock_shared
SEXP boost_try_lock_shared(SEXP mutexInfoAddr);
RcppExport SEXP synchronicity_boost_try_lock_shared(SEXP mutexInfoAddrSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type mutexInfoAddr(mutexInfoAddrSEXP);
    __result = Rcpp::wrap(boost_try_lock_shared(mutexInfoAddr));
    return __result;
END_RCPP
}
// boost_unlock_shared
SEXP boost_unlock_shared(SEXP mutexInfoAddr);
RcppExport SEXP synchronicity_boost_unlock_shared(SEXP mutexInfoAddrSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< SEXP >::type mutexInfoAddr(mutexInfoAddrSEXP);
    __result = Rcpp::wrap(boost_unlock_shared(mutexInfoAddr));
    return __result;
END_RCPP
}
